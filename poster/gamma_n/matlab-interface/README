

	  MATLAB interface to the neutral density package GAMMA-N
	  *******************************************************

This directory contains MATLAB and FORTRAN code that provides a double
precision MATLAB interface to the FORTRAN package GAMMA-N. The FORTRAN
package must be installed, as described in the parent directory .., before
the code in this directory can be built.

The MATLAB interface consists of two M-files, gamma_n.m and
neutral_surfaces.m, which provide two MATLAB functions which have the same
function as the corresponding subroutines in the FORTRAN library. The
calling sequences for these two functions are given below. 

These two MATLAB functions respectively call two executable FORTRAN programs
'glabel_matlab' and 'nsfces_matlab', which can be made from the two FORTRAN
files contained in this directory. These two executable files can be compiled
by simply typing 'make', after copying the appropriate makefile to Makefile.

The neutral_surface code does, on occasions, detect the existence of more
than one solution (sns,tns,pns) for particular input neutral surfaces.
In this case, the code returns with sns, tns and pns values corresponding to
the middle crossing, and dsns, dtns and dpns values giving the possible error
in this crossing. Also the file 'ns-multiples.dat' is written, containing all
relevant information on the multiply defined surfaces. Specifically, for each
cast in the section for which a surface is not uniquely defined, the file
contains a line containing the triple (cast #, surface #, ncr = # crossings)
and then ncr lines containing the (sns,tns,pns) solutions. This situation
arises when the user's data is statically unstable. When such a problem cast
comes from a section of data with well defined surfaces on neighbouring
casts, the 'ns_multiples.dat' file can be inspected to make an objective
choice of the most appropriate crossing.

Once the code in this directory has been successfully compiled, the
executable FORTRAN code and the two M-files will need to be made available
to the MATLAB application. This can be achieved in a variety of ways, which
I leave up to the systems programmer or the user of the code.

We have also provided an M-file, 'example.m', which demonstrates the use of
the two MATLAB functions on a three cast section of data. The output from
running this example is contained in 'example.out'.

Finally, we have included a ConditionsOfUse file, which should be read prior
to use of the code.


David Jackett and Trevor mcDougall

June, 1995





function [g,dg_lo,dg_hi] = gamma_n(s,t,p,along,alat)

%%%	GAMMA_N:	Label hydrographic data with neutral density
%%%
%%%	USAGE:		[g,dg_lo,dg_hi] = gamma_n(s,t,p,along,alat)
%%%
%%%	DESCRIPTION:	Label a section of hydrographic data at a specified
%%%			location with neutral density
%%%
%%%	PRECISION:	Double
%%%
%%%	INPUT:		s       matrix of salinity (each column being a cast)
%%%			t       matrix of in-situ temperatures 
%%%			p	matrix of pressures
%%%			along	vector of longitudes (0,360)
%%%			alat	vector of latitudes (-90,90)
%%%
%%%			NOTE:	missing values must be denoted by NaN's
%%%
%%%	OUTPUT:		g	matrix of gamma_n values
%%%			dg_lo   matrix of gamma_n lower error estimates
%%%			dg_hi   matrix of gamma_n upper error estimates
%%%
%%%			NOTE:	NaN denotes missing input data
%%%				-99.0 denotes algorithm failed
%%%				-99.1 denotes input data is outside the valid
%%%				      range of the present equation of state
%%%
%%%	UNITS:		salinity	psu (IPSS-78)
%%%			temperature	degrees C (IPTS-68)
%%%			pressure	db
%%%			gamma_n		kg m-3
%%%
%%%
%%%	AUTHOR:		David Jackett
%%%
%%%	CREATED:	October, 1994
%%%
%%%	REVISION:	2.1		16/2/95
%%%





function [sns,tns,pns,dsns,dtns,dpns] = neutral_surfaces(s,t,p,g,glevels)

%%%  NEUTRAL_SURFACES:	Fit neutral surfaces to hydrographic data
%%%
%%%	USAGE:		[sns,tns,pns,dsns,dtns,dpns] = 
%%%					neutral_surfaces(s,t,p,g,glevels)
%%%
%%%	DESCRIPTION:	For a section of hydrographic data which has been 
%%%			labelled with the neutral density variable gamma_n,
%%%			find the salinities, temperatures and pressures
%%%			on specified neutral density surfaces.
%%%
%%%	PRECISION:	Double
%%%
%%%	INPUT:		s       matrix of salinity (each column being a cast)
%%%			t       matrix of in-situ temperatures 
%%%			p	matrix of pressures
%%%			g	matrix of labelled gamma_n values
%%%			glevels	vector of gamma_n values defining the neutral
%%%				surfaces
%%%
%%%			NOTE:	missing values must be denoted by NaN's
%%%
%%%	OUTPUT:		sns	matrix of salinities on neutral surfaces
%%%			tns 	matrix of surface in situ temperatures
%%%			pns	matrix of surface pressures
%%%			dsns	matrix of surface salinity errors
%%%			dtns	matrix of surface temperature errors
%%%			dpns	matrix of surface pressure errors
%%%
%%%				sns, tns and pns values of -99.0
%%%				denotes under or outcropping
%%%
%%%				non-zero dsns, dtns and dpns values
%%%				indicate multiply defined surfaces,
%%%				and file 'ns_multiples.dat' contains
%%%				information on the multiple solutions
%%%
%%%	UNITS:		salinity	psu (IPSS-78)
%%%			temperature	degrees C (IPTS-68)
%%%			pressure	db
%%%			gamma_n		kg m-3
%%%
%%%
%%%	AUTHOR:		David Jackett
%%%
%%%	CREATED:	October, 1994
%%%
%%%	REVISION:	2.1		26/4/95
%%%
